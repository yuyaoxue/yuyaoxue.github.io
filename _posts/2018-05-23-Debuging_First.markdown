---
layout: post
title:  "调试的重要性"
date:   2018-05-23 18:02:01 +0800
categories: jekyll update
---

# 调试的重要性

掌握调试的技巧与方法，会让调试工作事半功倍，从而节省更多的时间来做其他的事情。个人觉得调试在学习工作中很重要的地位， 把 Debuging 的读书笔记作为我网站的第一篇博客，原因后面会说到。

## 不要浮于表面

1.不要只看厚度

几句话能把问题讲清楚容易，一句话把问题讲清楚难，更何况有时候几句话还讲不清楚，有时候写书跟说话一样。
>把书写厚了容易，把书写薄了难

曾经以为只有厚的书，知识含量高；往往浓缩的才是精华，以后说话做事力求简洁明了。

2.越简单的规则往往越被人忽略

有些规则显而易见，会记得运用在特定的问题上，越往往不容易；有时候会被人忽视，有时候会走所谓的捷径，最终所花的时间越久，所以要记住并运用好这些规则。

3.调试不仅仅是故障检修

>调试不仅仅是故障检修，故障检修通常是已知设计没有问题的情况下，有硬件出现问题。调试通常是查明一个设计为什么没有按计划工作。

作者通过 20 多年工作经验总结出来的调试九法，并不是一开始就写了 9 种；而是工作积累总结了无数条，被压缩成了 9 条。

### 调试九法第一条 理解系统

>你必须掌握系统的工作原理以及它是如何设计的，在某些情况下，还要知道为什么这么设计，如果你没有理解系统的某个部分，那么通常就是出问题的地方

开始构建我的网站时间已经有两周了，虽然除了工作时间，其余的时间也不是很多。最根本的原因是没有系统的看过官网文档的配置步骤，觉得图省事看了网上其他前辈们的步骤文档，现在还没有成功的发布一个博客，不是那些文档写的不对，只是我没有真正的理解 GitHub Pages，所以理解系统很重要。

在开发的过程中，在接触到新的功能时、修改 Bug，容易犯经验主义错误，没有仔细的看相关文档，导致最后漏掉功能细节，或者修改 Bug 不彻底，甚至找不到出现 Bug 原因。

理解系统可以通过以下几方面来做：

1.阅读手册，手册里会告诉你正确的使用方法；

2.逐字逐句的阅读整个手册，解决问题的方法可能就隐藏在不起眼的角落；

3.知道什么是正常的，即必须掌握你所工作技术领悟内的基础知识，才能知道什么是正常的；

4.知道工作流程：当你尝试查找错误时，必须知道要查找的路线；

5.调试工具是用来观察系统的眼和耳，你必须选择正确的工具，正确地使用工具，并正确地解释得到的结果；你越是精通工具，就越容易查明系统中发生了什么事情；

6.了解你的工具：调试工具是用来观察系统的眼和耳，你必须选择正确的调试工具，正确的使用工具，并正确的解释得到的结果。还要必须了解工具的局限性，可以显示什么错误，不能显示什么错误。还必须了解开发工具，所使用的编程语言；

7.在项目中，对一个组件或者语法的运用有分歧，不要盲目的相信自己的记忆力，不要猜测，去查阅手册，要养成良好的查阅习惯。
